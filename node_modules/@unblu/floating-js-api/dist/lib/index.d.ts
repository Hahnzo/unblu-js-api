import { AgentAvailabilityChangeListener, AgentAvailableChangeListener, ConversationChangeListener, ConversationsChangeListener, NotificationCountChangeListener, PersonActivityListener, PersonChangeListener, UnbluApi } from './unblu-api';
import { CallStateListener, ConnectionStateListener, Conversation, ConversationStateListener, CustomActionInvocationListener } from './shared/conversation';
import { NewConversationInterceptor } from "./shared/new-conversation-interceptor";
import { NewConversationInterceptorResult } from "./shared/model/new-conversation-interceptor-result";
import { ApiState } from "./shared/api-state";
import { Configuration, ErrorListener, ReadyListener, UnbluStaticApi } from './unblu-static-api';
import { CallState } from './shared/model/call-state';
import { ConnectionState } from './shared/model/connection-state';
import { ConversationType } from './shared/model/conversation-type';
import { ConversationRecipient } from "./shared/model/conversation-recipient";
import { ConversationRecipientType } from "./shared/model/conversation-recipient-type";
import { NewConversationRecipient } from "./shared/model/new-conversation-recipient";
import { NewConversationRecipientType } from "./shared/model/new-conversation-recipient-type";
import { AgentAvailabilityState } from './shared/model/agent-availability-state';
import { ConversationState } from './shared/model/conversation-state';
import { UnbluApiError, UnbluErrorType } from './shared/unblu-api-error';
import { IndividualUiState } from "./model/individualui_state";
import { ActiveIndividualUiView } from "./model/individualui_component";
import { UiActiveIndividualUiViewChangeListener, UiStateChangeListener, UnbluUiApi } from "./unblu-api-ui";
import { ConversationInfo } from "./shared/model/conversation-info";
import { PersonInfo } from "./shared/model/person-info";
import { ConversationParticipant } from "./shared/model/conversation-participant";
import { ConversationParticipationType } from "./shared/model/conversation-participation-type";
import { CustomActionInvocation } from "./shared/model/customaction/custom-action-invocation";
export { AgentAvailabilityState };
export { ApiState, UnbluStaticApi, Configuration, ErrorListener, ReadyListener };
export { CallState };
export { ConnectionState };
export { ConversationState };
export { ConversationType };
export { IndividualUiState };
export { ActiveIndividualUiView };
export { UnbluErrorType };
export { Conversation, CallStateListener, ConnectionStateListener, ConversationStateListener, CustomActionInvocationListener };
export { UnbluApi, AgentAvailableChangeListener, AgentAvailabilityChangeListener, ConversationChangeListener, ConversationsChangeListener, NewConversationInterceptor, NewConversationInterceptorResult, ConversationRecipient, ConversationRecipientType, NewConversationRecipient, NewConversationRecipientType, NotificationCountChangeListener, PersonChangeListener, PersonActivityListener };
export { UnbluApiError };
export { UnbluUiApi, UiActiveIndividualUiViewChangeListener, UiStateChangeListener };
export { ConversationInfo };
export { PersonInfo };
export { CustomActionInvocation };
export { ConversationParticipant, ConversationParticipationType };
/**
 * The main unblu namespace which gives access to the Unblu API.
 *
 * Access:
 * ```javascript
 * window.unblu.floating
 * ```
 */
export interface Unblu {
    /**
     * Global scope access to the Unblu Floating API namespace.
     *
     * **Note:** This field and its {@link floating.api} field will be available as soon as the Unblu Floating API has been loaded, no matter if loaded as script import or as ES-Module.
     * All other fields will only be available if loaded as static script import.
     */
    floating?: {
        /**
         * Global scope access to the Unblu Floating API.
         *
         * **Note:** This field will be available as soon as the Unblu Floating API has been loaded, no matter if loaded as script import or as ES-Module.
         */
        api: UnbluStaticApi;
        AgentAvailabilityState?: typeof AgentAvailabilityState;
        CallState?: typeof CallState;
        ConnectionState?: typeof ConnectionState;
        ConversationState?: typeof ConversationState;
        ConversationType?: typeof ConversationType;
        UnbluErrorType?: typeof UnbluErrorType;
    };
}
/**
 * Global window scope definition of the Unblu namespace on the window.
 * Access:
 * ```javascript
 * window.unblu.floating.api
 * ```
 * @noInheritDoc
 */
export declare interface Globals extends Window {
    /**
     * The main unblu namespace
     */
    unblu: Unblu;
}
declare const _default: {
    /**
     * Access to the Unblu Floating API
     */
    api: UnbluStaticApi;
    AgentAvailabilityState: typeof AgentAvailabilityState;
    CallState: typeof CallState;
    ConnectionState: typeof ConnectionState;
    ConversationState: typeof ConversationState;
    ConversationType: typeof ConversationType;
    UnbluErrorType: typeof UnbluErrorType;
};
export default _default;
